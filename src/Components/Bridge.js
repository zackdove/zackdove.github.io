/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useState } from "react";
import { useFrame } from '@react-three/fiber'
import { useGLTF } from "@react-three/drei";
import Menu from "./Menu";

export default function Model(props) {
    console.log(props)
    const enter = props.enter;
    console.log(enter)
  const group = useRef();
  const { nodes, materials } = useGLTF("/merged.glb");
  const [backwards, setBackwards] = useState(false);
  useFrame(({ clock }) => {
    // console.log("Hey, I'm executing every frame!")
    group.current.rotation.y = clock.getElapsedTime() / 4;
    // console.log(group.current.rotation.y * 180 / Math.PI);
    if (! ((group.current.rotation.y % (2*Math.PI)) > Math.PI/2 &&  (group.current.rotation.y % (2*Math.PI)) < 3*Math.PI/2)){
        setBackwards(true);
    } else {
        setBackwards(false);
    }
  })
  return (
    <group ref={group} {...props} dispose={null}>
      <mesh
        geometry={nodes["Graffiti-Bridge_1mil_meters"].geometry}
        material={materials["Graffiti-Bridge_1mil_meters"]}
        rotation={[-0.02601474, -0.66675749, -0.04204987]}
      />
      <Menu enter={enter} backwards={backwards}/>
    </group>
  );
}

useGLTF.preload("/merged.glb");
